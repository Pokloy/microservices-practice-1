spring.application.name=inventory-service
server.port=8084

# Eureka configuration of client
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/

# ==========================
# Kafka Consumer Properties
# ==========================
spring.kafka.bootstrap-servers=kafka:29092
spring.kafka.consumer.group-id=inventory-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

# Spring Retry (optional global tuning)
spring.retry.max-attempts=3
spring.retry.backoff.delay=2000

# ==========================
# Listener Retry & DLT Setup
# ==========================
spring.kafka.listener.ack-mode=record
spring.kafka.listener.concurrency=3
spring.kafka.listener.type=batch
spring.kafka.listener.missing-topics-fatal=false

# Retry backoff configuration
spring.kafka.listener.retry.backoff.initial-interval=1000
spring.kafka.listener.retry.backoff.max-interval=10000
spring.kafka.listener.retry.backoff.multiplier=2.0

# Enable Dead Letter Topic (DLT)
spring.kafka.listener.dlt.enabled=true
spring.kafka.listener.dlt.topic-suffix=.DLT

# --- Actuator endpoint configuration ---
management.endpoint.health.show-details=always

# Management endpoints exposure
management.endpoints.web.exposure.include=health,info,metrics,prometheus

# Optional: Customize Prometheus endpoint port (if needed)
management.server.port=8084

# Application info
management.info.env.enabled=true
info.app.name=Inventory Service
info.app.version=1.0.0
info.app.description=Inventory Microservice with Prometheus Integration
